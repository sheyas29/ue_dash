{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshre\\\\OneDrive\\\\Desktop\\\\my-manpower-dashboard\\\\frontend\\\\src\\\\components\\\\GenerateSalary.js\";\n// components/GenerateSalary.js\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateSalary = ({\n  contractId\n}) => {\n  const handleGenerateSalaries = async () => {\n    const month = new Date().getMonth() + 1;\n    const year = new Date().getFullYear();\n    try {\n      console.log(`Generating salaries for contractId: ${contractId}, month: ${month}, year: ${year}`);\n      const response = await axios.post(`http://localhost:5000/api/contracts/${contractId}/salaries/generate`, {\n        month,\n        year\n      });\n      console.log('Salaries generated:', response.data);\n      alert('Salaries generated successfully!');\n    } catch (error) {\n      console.error('Error generating salaries:', error);\n      alert('Error generating salaries. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSalaries,\n      children: \"Generate Salaries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = GenerateSalary;\nexport default GenerateSalary;\nvar _c;\n$RefreshReg$(_c, \"GenerateSalary\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","GenerateSalary","contractId","handleGenerateSalaries","month","Date","getMonth","year","getFullYear","console","log","response","post","data","alert","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kshre/OneDrive/Desktop/my-manpower-dashboard/frontend/src/components/GenerateSalary.js"],"sourcesContent":["// components/GenerateSalary.js\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GenerateSalary = ({ contractId }) => {\r\n  const handleGenerateSalaries = async () => {\r\n    const month = new Date().getMonth() + 1;\r\n    const year = new Date().getFullYear();\r\n    try {\r\n      console.log(`Generating salaries for contractId: ${contractId}, month: ${month}, year: ${year}`);\r\n      const response = await axios.post(`http://localhost:5000/api/contracts/${contractId}/salaries/generate`, { month, year });\r\n      console.log('Salaries generated:', response.data);\r\n      alert('Salaries generated successfully!');\r\n    } catch (error) {\r\n      console.error('Error generating salaries:', error);\r\n      alert('Error generating salaries. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleGenerateSalaries}>Generate Salaries</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateSalary;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EACzC,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC;IACvC,MAAMC,IAAI,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;IACrC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,uCAAuCR,UAAU,YAAYE,KAAK,WAAWG,IAAI,EAAE,CAAC;MAChG,MAAMI,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,uCAAuCV,UAAU,oBAAoB,EAAE;QAAEE,KAAK;QAAEG;MAAK,CAAC,CAAC;MACzHE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACjDC,KAAK,CAAC,kCAAkC,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDD,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAQiB,OAAO,EAAEd,sBAAuB;MAAAa,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV,CAAC;AAACC,EAAA,GApBIrB,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}