{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import axios from'axios';// import './GenerateInvoice.css';\nimport{useReactToPrint}from'react-to-print';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const GenerateInvoice=_ref=>{let{contractId,month,year}=_ref;const[salaries,setSalaries]=useState([]);const invoiceRef=useRef();useEffect(()=>{const fetchSalaries=async()=>{try{const response=await axios.get(\"http://localhost:5000/api/contracts/\".concat(contractId,\"/salaries\"),{params:{month,year}});setSalaries(response.data);}catch(error){console.error('Error fetching salary records:',error);}};fetchSalaries();},[contractId,month,year]);const formatMonth=month=>{const monthNames=[\"JANUARY\",\"FEBRUARY\",\"MARCH\",\"APRIL\",\"MAY\",\"JUNE\",\"JULY\",\"AUGUST\",\"SEPTEMBER\",\"OCTOBER\",\"NOVEMBER\",\"DECEMBER\"];if(typeof month==='string'){const monthNumber=parseInt(month,10);if(!isNaN(monthNumber)&&monthNumber>=1&&monthNumber<=12){return monthNames[monthNumber-1];}return month.toUpperCase();}else if(typeof month==='number'&&month>=1&&month<=12){return monthNames[month-1];}return'UNKNOWN MONTH';};const handlePrint=useReactToPrint({content:()=>invoiceRef.current,documentTitle:\"\".concat(formatMonth(month),\"-\").concat(year,\"-Invoice\")});const totalGrossSalary=salaries.reduce((acc,curr)=>acc+curr.grossSalary,0);const totalEmployerEPF=salaries.reduce((acc,curr)=>acc+curr.employerEPF,0);const totalEmployerESIC=salaries.reduce((acc,curr)=>acc+curr.employerESIC,0);const totalAdminCharges=salaries.reduce((acc,curr)=>acc+curr.adminCharges,0);const totalContribution=salaries.reduce((acc,curr)=>acc+curr.contribution,0);const subTotalD=totalGrossSalary+totalEmployerEPF+totalEmployerESIC;const serviceCharges=0.85*subTotalD/100;const gst=18*subTotalD/100;const total=subTotalD+serviceCharges+gst;const serviceChargesExcludingGST=0.72*subTotalD/100;const subTotalTaxableValue=subTotalD+serviceChargesExcludingGST;const totalGST=18*subTotalTaxableValue/100;const totalInvoice=subTotalTaxableValue+totalGST;return/*#__PURE__*/_jsxs(\"div\",{className:\"invoice-display\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[formatMonth(month),\"/\",year,\" Invoice\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePrint,className:\"print-button\",children:\"Print Invoice\"}),/*#__PURE__*/_jsxs(\"div\",{ref:invoiceRef,className:\"invoice-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"invoice-header\",children:/*#__PURE__*/_jsxs(\"h1\",{children:[\"Invoice for \",formatMonth(month),\" \",year]})}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"WAGES (A)\"}),/*#__PURE__*/_jsx(\"td\",{children:totalGrossSalary.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"EPF 13% on max.Rs.15,000/- (B)\"}),/*#__PURE__*/_jsx(\"td\",{children:totalEmployerEPF.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"ESIC (C) 3.25%\"}),/*#__PURE__*/_jsx(\"td\",{children:totalEmployerESIC.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"SUB TOTAL (D) = A+B+C\"}),/*#__PURE__*/_jsx(\"td\",{children:subTotalD.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"SERVICE CHARGES (0.85% including GST) on (D)\"}),/*#__PURE__*/_jsx(\"td\",{children:serviceCharges.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"GST 18% on (D)\"}),/*#__PURE__*/_jsx(\"td\",{children:gst.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"TOTAL\"}),/*#__PURE__*/_jsx(\"td\",{children:total.toFixed(2)})]}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"2\"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"(I) WAGES + EPF + ESIC = (D)\"}),/*#__PURE__*/_jsx(\"td\",{children:subTotalD.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"(II) SERVICE CHARGES (0.85% including GST i.e.0.72 excluding GST)\"}),/*#__PURE__*/_jsx(\"td\",{children:serviceChargesExcludingGST.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"(III) SUB TOTAL i.e. TAXABLE VALUE\"}),/*#__PURE__*/_jsx(\"td\",{children:subTotalTaxableValue.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"TOTAL GST 18%\"}),/*#__PURE__*/_jsx(\"td\",{children:totalGST.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"TOTAL\"}),/*#__PURE__*/_jsx(\"td\",{children:totalInvoice.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Rounded Off\"}),/*#__PURE__*/_jsx(\"td\",{children:Math.round(totalInvoice)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Wages increased w.e.f. 01.04.2024\"}),/*#__PURE__*/_jsx(\"td\",{})]})]})})]})]});};export default GenerateInvoice;","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","useReactToPrint","jsxs","_jsxs","jsx","_jsx","GenerateInvoice","_ref","contractId","month","year","salaries","setSalaries","invoiceRef","fetchSalaries","response","get","concat","params","data","error","console","formatMonth","monthNames","monthNumber","parseInt","isNaN","toUpperCase","handlePrint","content","current","documentTitle","totalGrossSalary","reduce","acc","curr","grossSalary","totalEmployerEPF","employerEPF","totalEmployerESIC","employerESIC","totalAdminCharges","adminCharges","totalContribution","contribution","subTotalD","serviceCharges","gst","total","serviceChargesExcludingGST","subTotalTaxableValue","totalGST","totalInvoice","className","children","onClick","ref","toFixed","colSpan","Math","round"],"sources":["C:/Users/kshre/OneDrive/Desktop/my-manpower-dashboard/frontend/src/components/GenerateInvoice.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n// import './GenerateInvoice.css';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\nconst GenerateInvoice = ({ contractId, month, year }) => {\r\n    const [salaries, setSalaries] = useState([]);\r\n    const invoiceRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const fetchSalaries = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/salaries`, {\r\n                    params: { month, year }\r\n                });\r\n                setSalaries(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching salary records:', error);\r\n            }\r\n        };\r\n\r\n        fetchSalaries();\r\n    }, [contractId, month, year]);\r\n\r\n    const formatMonth = (month) => {\r\n        const monthNames = [\r\n            \"JANUARY\", \"FEBRUARY\", \"MARCH\", \"APRIL\", \"MAY\", \"JUNE\",\r\n            \"JULY\", \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"\r\n        ];\r\n        if (typeof month === 'string') {\r\n            const monthNumber = parseInt(month, 10);\r\n            if (!isNaN(monthNumber) && monthNumber >= 1 && monthNumber <= 12) {\r\n                return monthNames[monthNumber - 1];\r\n            }\r\n            return month.toUpperCase();\r\n        } else if (typeof month === 'number' && month >= 1 && month <= 12) {\r\n            return monthNames[month - 1];\r\n        }\r\n        return 'UNKNOWN MONTH';\r\n    };\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => invoiceRef.current,\r\n        documentTitle: `${formatMonth(month)}-${year}-Invoice`,\r\n    });\r\n\r\n    const totalGrossSalary = salaries.reduce((acc, curr) => acc + curr.grossSalary, 0);\r\n    const totalEmployerEPF = salaries.reduce((acc, curr) => acc + curr.employerEPF, 0);\r\n    const totalEmployerESIC = salaries.reduce((acc, curr) => acc + curr.employerESIC, 0);\r\n    const totalAdminCharges = salaries.reduce((acc, curr) => acc + curr.adminCharges, 0);\r\n    const totalContribution = salaries.reduce((acc, curr) => acc + curr.contribution, 0);\r\n\r\n    const subTotalD = totalGrossSalary + totalEmployerEPF + totalEmployerESIC;\r\n    const serviceCharges = 0.85 * subTotalD / 100;\r\n    const gst = 18 * subTotalD / 100;\r\n    const total = subTotalD + serviceCharges + gst;\r\n\r\n    const serviceChargesExcludingGST = 0.72 * subTotalD / 100;\r\n    const subTotalTaxableValue = subTotalD + serviceChargesExcludingGST;\r\n    const totalGST = 18 * subTotalTaxableValue / 100;\r\n    const totalInvoice = subTotalTaxableValue + totalGST;\r\n\r\n    return (\r\n        <div className=\"invoice-display\">\r\n            <h2>{formatMonth(month)}/{year} Invoice</h2>\r\n            <button onClick={handlePrint} className=\"print-button\">Print Invoice</button>\r\n            <div ref={invoiceRef} className=\"invoice-content\">\r\n                <div className=\"invoice-header\">\r\n                    <h1>Invoice for {formatMonth(month)} {year}</h1>\r\n                </div>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>WAGES (A)</td>\r\n                            <td>{totalGrossSalary.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>EPF 13% on max.Rs.15,000/- (B)</td>\r\n                            <td>{totalEmployerEPF.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ESIC (C) 3.25%</td>\r\n                            <td>{totalEmployerESIC.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>SUB TOTAL (D) = A+B+C</td>\r\n                            <td>{subTotalD.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>SERVICE CHARGES (0.85% including GST) on (D)</td>\r\n                            <td>{serviceCharges.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>GST 18% on (D)</td>\r\n                            <td>{gst.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>TOTAL</td>\r\n                            <td>{total.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>(I) WAGES + EPF + ESIC = (D)</td>\r\n                            <td>{subTotalD.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>(II) SERVICE CHARGES (0.85% including GST i.e.0.72 excluding GST)</td>\r\n                            <td>{serviceChargesExcludingGST.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>(III) SUB TOTAL i.e. TAXABLE VALUE</td>\r\n                            <td>{subTotalTaxableValue.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>TOTAL GST 18%</td>\r\n                            <td>{totalGST.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>TOTAL</td>\r\n                            <td>{totalInvoice.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Rounded Off</td>\r\n                            <td>{Math.round(totalInvoice)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Wages increased w.e.f. 01.04.2024</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenerateInvoice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}