{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshre\\\\OneDrive\\\\Desktop\\\\my-manpower-dashboard\\\\frontend\\\\src\\\\components\\\\AttendanceForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceForm = ({\n  contractId\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState('');\n  const [workingDays, setWorkingDays] = useState('');\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/employees`);\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchEmployees();\n  }, [contractId]);\n  const handleAttendanceChange = (e, employeeId) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAttendanceData(prevData => {\n      const existingRecord = prevData.find(record => record.employeeId === employeeId);\n      if (existingRecord) {\n        return prevData.map(record => record.employeeId === employeeId ? {\n          ...record,\n          [name]: value\n        } : record);\n      } else {\n        return [...prevData, {\n          employeeId,\n          [name]: value\n        }];\n      }\n    });\n  };\n  const handleSave = async () => {\n    const attendancePayload = {\n      contractId,\n      month: selectedMonthYear.split('-')[1],\n      year: selectedMonthYear.split('-')[0],\n      workingDays,\n      attendance: attendanceData\n    };\n    console.log('Saving attendance data:', attendancePayload);\n    try {\n      const response = await axios.post(`http://localhost:5000/api/contracts/${contractId}/attendance`, attendancePayload);\n      console.log('Attendance data saved:', response.data);\n    } catch (error) {\n      console.error('Error saving attendance data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"month\",\n      value: selectedMonthYear,\n      onChange: e => setSelectedMonthYear(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Working Days\",\n      value: workingDays,\n      onChange: e => setWorkingDays(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Daily Wage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.dailyWage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"attendance\",\n              onChange: e => handleAttendanceChange(e, employee._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, employee._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceForm, \"L4B98k6t63Z2I1dzWSy6/MpOu8Q=\");\n_c = AttendanceForm;\nexport default AttendanceForm;\nvar _c;\n$RefreshReg$(_c, \"AttendanceForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AttendanceForm","contractId","_s","employees","setEmployees","attendanceData","setAttendanceData","selectedMonthYear","setSelectedMonthYear","workingDays","setWorkingDays","fetchEmployees","response","get","data","error","console","handleAttendanceChange","e","employeeId","name","value","target","prevData","existingRecord","find","record","map","handleSave","attendancePayload","month","split","year","attendance","log","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","employee","dailyWage","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kshre/OneDrive/Desktop/my-manpower-dashboard/frontend/src/components/AttendanceForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AttendanceForm = ({ contractId }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [selectedMonthYear, setSelectedMonthYear] = useState('');\r\n  const [workingDays, setWorkingDays] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/employees`);\r\n        setEmployees(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n      }\r\n    };\r\n\r\n    fetchEmployees();\r\n  }, [contractId]);\r\n\r\n  const handleAttendanceChange = (e, employeeId) => {\r\n    const { name, value } = e.target;\r\n    setAttendanceData((prevData) => {\r\n      const existingRecord = prevData.find(record => record.employeeId === employeeId);\r\n      if (existingRecord) {\r\n        return prevData.map(record =>\r\n          record.employeeId === employeeId ? { ...record, [name]: value } : record\r\n        );\r\n      } else {\r\n        return [...prevData, { employeeId, [name]: value }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const attendancePayload = {\r\n      contractId,\r\n      month: selectedMonthYear.split('-')[1],\r\n      year: selectedMonthYear.split('-')[0],\r\n      workingDays,\r\n      attendance: attendanceData\r\n    };\r\n    console.log('Saving attendance data:', attendancePayload);\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/api/contracts/${contractId}/attendance`, attendancePayload);\r\n      console.log('Attendance data saved:', response.data);\r\n    } catch (error) {\r\n      console.error('Error saving attendance data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"attendance-form\">\r\n      <h3>Add Attendance</h3>\r\n      <input\r\n        type=\"month\"\r\n        value={selectedMonthYear}\r\n        onChange={(e) => setSelectedMonthYear(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Working Days\"\r\n        value={workingDays}\r\n        onChange={(e) => setWorkingDays(e.target.value)}\r\n      />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Employee Name</th>\r\n            <th>Daily Wage</th>\r\n            <th>Attendance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.map((employee) => (\r\n            <tr key={employee._id}>\r\n              <td>{employee.name}</td>\r\n              <td>{employee.dailyWage}</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"attendance\"\r\n                  onChange={(e) => handleAttendanceChange(e, employee._id)}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={handleSave}>Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}