{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshre\\\\OneDrive\\\\Desktop\\\\my-manpower-dashboard\\\\frontend\\\\src\\\\components\\\\AttendanceDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceDisplay = ({\n  contractId\n}) => {\n  _s();\n  const [attendanceRecords, setAttendanceRecords] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState('');\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    const fetchAttendance = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/attendance`, {\n          params: {\n            month: selectedMonthYear.split('-')[1],\n            year: selectedMonthYear.split('-')[0]\n          }\n        });\n        setAttendanceRecords(response.data);\n      } catch (error) {\n        console.error('Error fetching attendance records:', error);\n      }\n    };\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/employees`);\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    if (selectedMonthYear) {\n      fetchAttendance();\n      fetchEmployees();\n    }\n  }, [contractId, selectedMonthYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Attendance Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"month\",\n      value: selectedMonthYear,\n      onChange: e => setSelectedMonthYear(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), attendanceRecords.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No attendance records found for the selected month.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Daily Wage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: attendanceRecords.map(record => {\n          const employee = employees.find(emp => emp._id === record.employeeId);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee ? employee.name : 'Unknown'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.dailyWage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.attendance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, record._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceDisplay, \"ZUDPPG29zzw64np1NUzSmuDUCMw=\");\n_c = AttendanceDisplay;\nexport default AttendanceDisplay;\nvar _c;\n$RefreshReg$(_c, \"AttendanceDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AttendanceDisplay","contractId","_s","attendanceRecords","setAttendanceRecords","selectedMonthYear","setSelectedMonthYear","employees","setEmployees","fetchAttendance","response","get","params","month","split","year","data","error","console","fetchEmployees","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","length","map","record","employee","find","emp","_id","employeeId","name","dailyWage","attendance","_c","$RefreshReg$"],"sources":["C:/Users/kshre/OneDrive/Desktop/my-manpower-dashboard/frontend/src/components/AttendanceDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AttendanceDisplay = ({ contractId }) => {\r\n  const [attendanceRecords, setAttendanceRecords] = useState([]);\r\n  const [selectedMonthYear, setSelectedMonthYear] = useState('');\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAttendance = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/attendance`, {\r\n          params: {\r\n            month: selectedMonthYear.split('-')[1],\r\n            year: selectedMonthYear.split('-')[0]\r\n          }\r\n        });\r\n        setAttendanceRecords(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching attendance records:', error);\r\n      }\r\n    };\r\n\r\n    const fetchEmployees = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/employees`);\r\n        setEmployees(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n      }\r\n    };\r\n\r\n    if (selectedMonthYear) {\r\n      fetchAttendance();\r\n      fetchEmployees();\r\n    }\r\n  }, [contractId, selectedMonthYear]);\r\n\r\n  return (\r\n    <div className=\"attendance-display\">\r\n      <h3>Attendance Records</h3>\r\n      <input\r\n        type=\"month\"\r\n        value={selectedMonthYear}\r\n        onChange={(e) => setSelectedMonthYear(e.target.value)}\r\n      />\r\n      {attendanceRecords.length === 0 ? (\r\n        <p>No attendance records found for the selected month.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Employee Name</th>\r\n              <th>Daily Wage</th>\r\n              <th>Attendance</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {attendanceRecords.map((record) => {\r\n              const employee = employees.find((emp) => emp._id === record.employeeId);\r\n              return (\r\n                <tr key={record._id}>\r\n                  <td>{employee ? employee.name : 'Unknown'}</td>\r\n                  <td>{record.dailyWage}</td>\r\n                  <td>{record.attendance}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}