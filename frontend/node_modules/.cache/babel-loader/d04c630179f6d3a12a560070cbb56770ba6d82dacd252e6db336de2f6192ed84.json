{"ast":null,"code":"// src/api/contractApi.js\nimport axios from 'axios';\nimport { API_URL, COMPANY_API_URL, EMPLOYEES_API_URL } from '../config';\nexport const getContracts = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching contracts:', error);\n    throw error;\n  }\n};\nexport const createContract = async contract => {\n  try {\n    const response = await axios.post(API_URL, contract, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating contract:', error);\n    throw error;\n  }\n};\nexport const getCompanyDetails = async () => {\n  try {\n    const response = await axios.get(COMPANY_API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching company details:', error);\n    throw error;\n  }\n};\nexport const updateCompanyDetails = async details => {\n  try {\n    const response = await axios.put(COMPANY_API_URL, details, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating company details:', error);\n    throw error;\n  }\n};\nexport const getTotalEmployees = async () => {\n  try {\n    const response = await axios.get(`${EMPLOYEES_API_URL}/total`);\n    return response.data.totalEmployees;\n  } catch (error) {\n    console.error('Error fetching total employees:', error);\n    throw error;\n  }\n};\nexport const deleteContract = async id => {\n  try {\n    await axios.delete(`${API_URL}/${id}`);\n  } catch (error) {\n    console.error('Error deleting contract:', error);\n    throw error;\n  }\n};\nexport const generateSalaries = async (contractId, month, year) => {\n  try {\n    const response = await axios.post(`${API_URL}/${contractId}/salaries/generate`, {\n      month,\n      year\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating salaries:', error);\n    throw error;\n  }\n};\nexport const deleteSalaries = async (contractId, month, year) => {\n  try {\n    await axios.delete(`${API_URL}/${contractId}/salaries/delete`, {\n      data: {\n        month,\n        year\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (error) {\n    console.error('Error deleting salaries:', error);\n    throw error;\n  }\n};\nexport const getSalaries = async (contractId, month, year) => {\n  try {\n    const response = await axios.get(`${API_URL}/${contractId}/salaries`, {\n      params: {\n        month,\n        year\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching salary records:', error);\n    throw error;\n  }\n};\nexport default {\n  getContracts,\n  createContract,\n  getCompanyDetails,\n  updateCompanyDetails,\n  getTotalEmployees,\n  deleteContract,\n  generateSalaries,\n  deleteSalaries,\n  getSalaries\n};","map":{"version":3,"names":["axios","API_URL","COMPANY_API_URL","EMPLOYEES_API_URL","getContracts","response","get","data","error","console","createContract","contract","post","headers","getCompanyDetails","updateCompanyDetails","details","put","getTotalEmployees","totalEmployees","deleteContract","id","delete","generateSalaries","contractId","month","year","deleteSalaries","getSalaries","params"],"sources":["C:/Users/kshre/OneDrive/Desktop/my-manpower-dashboard/frontend/src/apis/contractApi.js"],"sourcesContent":["// src/api/contractApi.js\r\nimport axios from 'axios';\r\nimport { API_URL, COMPANY_API_URL, EMPLOYEES_API_URL } from '../config';\r\n\r\nexport const getContracts = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching contracts:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createContract = async (contract) => {\r\n  try {\r\n    const response = await axios.post(API_URL, contract, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating contract:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCompanyDetails = async () => {\r\n  try {\r\n    const response = await axios.get(COMPANY_API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching company details:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateCompanyDetails = async (details) => {\r\n  try {\r\n    const response = await axios.put(COMPANY_API_URL, details, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating company details:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getTotalEmployees = async () => {\r\n  try {\r\n    const response = await axios.get(`${EMPLOYEES_API_URL}/total`);\r\n    return response.data.totalEmployees;\r\n  } catch (error) {\r\n    console.error('Error fetching total employees:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteContract = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/${id}`);\r\n  } catch (error) {\r\n    console.error('Error deleting contract:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const generateSalaries = async (contractId, month, year) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/${contractId}/salaries/generate`, { month, year }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error generating salaries:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteSalaries = async (contractId, month, year) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/${contractId}/salaries/delete`, {\r\n      data: { month, year },\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error deleting salaries:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getSalaries = async (contractId, month, year) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${contractId}/salaries`, { params: { month, year } });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching salary records:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default {\r\n  getContracts,\r\n  createContract,\r\n  getCompanyDetails,\r\n  updateCompanyDetails,\r\n  getTotalEmployees,\r\n  deleteContract,\r\n  generateSalaries,\r\n  deleteSalaries,\r\n  getSalaries,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}