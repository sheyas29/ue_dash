{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshre\\\\OneDrive\\\\Desktop\\\\my-manpower-dashboard\\\\frontend\\\\src\\\\components\\\\AttendanceDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceDisplay = ({\n  contractId\n}) => {\n  _s();\n  const [attendanceRecords, setAttendanceRecords] = useState([]);\n  const [selectedMonthYear, setSelectedMonthYear] = useState('');\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    if (selectedMonthYear && contractId) {\n      const fetchAttendance = async () => {\n        try {\n          const [month, year] = selectedMonthYear.split('-');\n          console.log('Fetching attendance for contractId:', contractId, 'month:', month, 'year:', year);\n          const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/attendance`, {\n            params: {\n              month,\n              year\n            }\n          });\n          console.log('Fetched attendance records from DB:', response.data);\n          setAttendanceRecords(response.data);\n        } catch (error) {\n          console.error('Error fetching attendance records:', error);\n        }\n      };\n      const fetchEmployees = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/employees`);\n          console.log('Fetched employees:', response.data);\n          setEmployees(response.data);\n        } catch (error) {\n          console.error('Error fetching employees:', error);\n        }\n      };\n      fetchAttendance();\n      fetchEmployees();\n    }\n  }, [contractId, selectedMonthYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Attendance Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"month\",\n      value: selectedMonthYear,\n      onChange: e => setSelectedMonthYear(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), attendanceRecords.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No attendance records found for the selected month.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Daily Wage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: attendanceRecords.map(record => {\n          const employee = employees.find(emp => emp._id === record.employeeId);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee ? employee.name : 'Unknown'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.dailyWage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.attendance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, record._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceDisplay, \"ZUDPPG29zzw64np1NUzSmuDUCMw=\");\n_c = AttendanceDisplay;\nexport default AttendanceDisplay;\nvar _c;\n$RefreshReg$(_c, \"AttendanceDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AttendanceDisplay","contractId","_s","attendanceRecords","setAttendanceRecords","selectedMonthYear","setSelectedMonthYear","employees","setEmployees","fetchAttendance","month","year","split","console","log","response","get","params","data","error","fetchEmployees","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","length","map","record","employee","find","emp","_id","employeeId","name","dailyWage","attendance","_c","$RefreshReg$"],"sources":["C:/Users/kshre/OneDrive/Desktop/my-manpower-dashboard/frontend/src/components/AttendanceDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AttendanceDisplay = ({ contractId }) => {\r\n  const [attendanceRecords, setAttendanceRecords] = useState([]);\r\n  const [selectedMonthYear, setSelectedMonthYear] = useState('');\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedMonthYear && contractId) {\r\n      const fetchAttendance = async () => {\r\n        try {\r\n          const [month, year] = selectedMonthYear.split('-');\r\n          console.log('Fetching attendance for contractId:', contractId, 'month:', month, 'year:', year);\r\n          const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/attendance`, {\r\n            params: { month, year }\r\n          });\r\n          console.log('Fetched attendance records from DB:', response.data);\r\n          setAttendanceRecords(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching attendance records:', error);\r\n        }\r\n      };\r\n\r\n      const fetchEmployees = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/employees`);\r\n          console.log('Fetched employees:', response.data);\r\n          setEmployees(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching employees:', error);\r\n        }\r\n      };\r\n\r\n      fetchAttendance();\r\n      fetchEmployees();\r\n    }\r\n  }, [contractId, selectedMonthYear]);\r\n\r\n  return (\r\n    <div className=\"attendance-display\">\r\n      <h3>Attendance Records</h3>\r\n      <input\r\n        type=\"month\"\r\n        value={selectedMonthYear}\r\n        onChange={(e) => setSelectedMonthYear(e.target.value)}\r\n      />\r\n      {attendanceRecords.length === 0 ? (\r\n        <p>No attendance records found for the selected month.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Employee Name</th>\r\n              <th>Daily Wage</th>\r\n              <th>Attendance</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {attendanceRecords.map((record) => {\r\n              const employee = employees.find((emp) => emp._id === record.employeeId);\r\n              return (\r\n                <tr key={record._id}>\r\n                  <td>{employee ? employee.name : 'Unknown'}</td>\r\n                  <td>{record.dailyWage}</td>\r\n                  <td>{record.attendance}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}