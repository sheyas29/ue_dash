{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshre\\\\OneDrive\\\\Desktop\\\\my-manpower-dashboard\\\\frontend\\\\src\\\\components\\\\DisplaySalary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// import './DisplaySalary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplaySalary = ({\n  contractId,\n  month,\n  year\n}) => {\n  _s();\n  const [salaries, setSalaries] = useState([]);\n  useEffect(() => {\n    const fetchSalaries = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/salaries`, {\n          params: {\n            month,\n            year\n          }\n        });\n        setSalaries(response.data);\n        console.log('Fetched salary records:', response.data);\n      } catch (error) {\n        console.error('Error fetching salary records:', error);\n      }\n    };\n    fetchSalaries();\n  }, [contractId, month, year]);\n\n  // Function to format the month\n  const formatMonth = month => {\n    const monthNames = [\"JANUARY\", \"FEBRUARY\", \"MARCH\", \"APRIL\", \"MAY\", \"JUNE\", \"JULY\", \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"];\n    if (typeof month === 'string') {\n      // If it's a string, try to parse it as a number\n      const monthNumber = parseInt(month, 10);\n      if (!isNaN(monthNumber) && monthNumber >= 1 && monthNumber <= 12) {\n        return monthNames[monthNumber - 1];\n      }\n      // If it's not a valid number, capitalize the string\n      return month.toUpperCase();\n    } else if (typeof month === 'number' && month >= 1 && month <= 12) {\n      return monthNames[month - 1];\n    }\n    return 'UNKNOWN MONTH';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"salary-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [formatMonth(month), \"/\", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), salaries.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"S.No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"No.of DAYS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"PER DAY WAGES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"GROSS PAY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"3\",\n            children: \"DEBITS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"TOT DED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            children: \"NET SAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: \"CREDIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EPF 12%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ESIC 0.75%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"P. Tax\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EPF 13%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ELDI 0.5%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EPF Admin 0.5%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ESIC 3.25%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: salaries.map((salary, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.employeeId.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.attendance.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.dailyWage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.grossSalary.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.employeeEPF.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.employeeESIC.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.pTax.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.totalDeductions.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.netSalary.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.employerEPF.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.contribution.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.adminCharges.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.employerESIC.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 14\n          }, this)]\n        }, salary._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.attendance, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.grossSalary, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.employeeEPF, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.employeeESIC, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.pTax, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.totalDeductions, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.netSalary, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.employerEPF, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.contribution, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.adminCharges, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salaries.reduce((acc, curr) => acc + curr.employerESIC, 0).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-records\",\n      children: \"No salary records found for the selected month and year.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplaySalary, \"Nfji14Er4skjC4/fhRws3nnA0xA=\");\n_c = DisplaySalary;\nexport default DisplaySalary;\nvar _c;\n$RefreshReg$(_c, \"DisplaySalary\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DisplaySalary","contractId","month","year","_s","salaries","setSalaries","fetchSalaries","response","get","params","data","console","log","error","formatMonth","monthNames","monthNumber","parseInt","isNaN","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","rowSpan","colSpan","map","salary","index","employeeId","name","attendance","toFixed","dailyWage","grossSalary","employeeEPF","employeeESIC","pTax","totalDeductions","netSalary","employerEPF","contribution","adminCharges","employerESIC","_id","reduce","acc","curr","_c","$RefreshReg$"],"sources":["C:/Users/kshre/OneDrive/Desktop/my-manpower-dashboard/frontend/src/components/DisplaySalary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n// import './DisplaySalary.css';\r\n\r\nconst DisplaySalary = ({ contractId, month, year }) => {\r\n  const [salaries, setSalaries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSalaries = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/contracts/${contractId}/salaries`, {\r\n          params: { month, year }\r\n        });\r\n        setSalaries(response.data);\r\n        console.log('Fetched salary records:', response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching salary records:', error);\r\n      }\r\n    };\r\n\r\n    fetchSalaries();\r\n  }, [contractId, month, year]);\r\n   \r\n  // Function to format the month\r\n  const formatMonth = (month) => {\r\n    const monthNames = [\r\n      \"JANUARY\", \"FEBRUARY\", \"MARCH\", \"APRIL\", \"MAY\", \"JUNE\",\r\n      \"JULY\", \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"\r\n    ];\r\n    \r\n    if (typeof month === 'string') {\r\n      // If it's a string, try to parse it as a number\r\n      const monthNumber = parseInt(month, 10);\r\n      if (!isNaN(monthNumber) && monthNumber >= 1 && monthNumber <= 12) {\r\n        return monthNames[monthNumber - 1];\r\n      }\r\n      // If it's not a valid number, capitalize the string\r\n      return month.toUpperCase();\r\n    } else if (typeof month === 'number' && month >= 1 && month <= 12) {\r\n      return monthNames[month - 1];\r\n    }\r\n    return 'UNKNOWN MONTH';\r\n  };\r\n\r\n  return (\r\n    <div className=\"salary-display\">\r\n      <h2>{formatMonth(month)}/{year}</h2>\r\n      {salaries.length > 0 ? (\r\n       <table>\r\n       <thead>\r\n         <tr>\r\n           <th rowSpan=\"2\">S.No</th>\r\n           <th rowSpan=\"2\">NAME</th>\r\n           <th rowSpan=\"2\">No.of DAYS</th>\r\n           <th rowSpan=\"2\">PER DAY WAGES</th>\r\n           <th rowSpan=\"2\">GROSS PAY</th>\r\n           <th colSpan=\"3\">DEBITS</th>\r\n           <th rowSpan=\"2\">TOT DED</th>\r\n           <th rowSpan=\"2\">NET SAL</th>\r\n           <th colSpan=\"4\">CREDIT</th>\r\n         </tr>\r\n         <tr>\r\n           <th>EPF 12%</th>\r\n           <th>ESIC 0.75%</th>\r\n           <th>P. Tax</th>\r\n           <th>EPF 13%</th>\r\n           <th>ELDI 0.5%</th>\r\n           <th>EPF Admin 0.5%</th>\r\n           <th>ESIC 3.25%</th>\r\n         </tr>\r\n       </thead>\r\n       <tbody>\r\n         {salaries.map((salary, index) => (\r\n           <tr key={salary._id}>\r\n             <td>{index + 1}</td>\r\n             <td>{salary.employeeId.name}</td>\r\n             <td>{salary.attendance.toFixed(2)}</td>\r\n             <td>{salary.dailyWage}</td>\r\n             <td>{salary.grossSalary.toFixed(2)}</td>\r\n             <td>{salary.employeeEPF.toFixed(2)}</td>\r\n             <td>{salary.employeeESIC.toFixed(2)}</td>\r\n             <td>{salary.pTax.toFixed(2)}</td>\r\n             <td>{salary.totalDeductions.toFixed(2)}</td>\r\n             <td>{salary.netSalary.toFixed(2)}</td>\r\n             <td>{salary.employerEPF.toFixed(2)}</td>\r\n             <td>{salary.contribution.toFixed(2)}</td>\r\n             <td>{salary.adminCharges.toFixed(2)}</td>\r\n             <td>{salary.employerESIC.toFixed(2)}</td>\r\n           </tr>\r\n         ))}\r\n       </tbody>\r\n       <tfoot>\r\n         <tr>\r\n           <td colSpan=\"2\">TOTAL</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.attendance, 0).toFixed(2)}</td>\r\n           <td></td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.grossSalary, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.employeeEPF, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.employeeESIC, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.pTax, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.totalDeductions, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.netSalary, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.employerEPF, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.contribution, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.adminCharges, 0).toFixed(2)}</td>\r\n           <td>{salaries.reduce((acc, curr) => acc + curr.employerESIC, 0).toFixed(2)}</td>\r\n         </tr>\r\n       </tfoot>\r\n     </table>\r\n      ) : (\r\n        <p className=\"no-records\">No salary records found for the selected month and year.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplaySalary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}