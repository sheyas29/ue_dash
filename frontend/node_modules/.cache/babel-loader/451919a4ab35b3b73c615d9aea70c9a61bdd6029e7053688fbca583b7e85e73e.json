{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshre\\\\OneDrive\\\\Desktop\\\\my-manpower-dashboard\\\\frontend\\\\src\\\\components\\\\GenerateSalary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateSalary = ({\n  contractId\n}) => {\n  _s();\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const handleMonthChange = e => {\n    setMonth(e.target.value);\n  };\n  const handleYearChange = e => {\n    setYear(e.target.value);\n  };\n  const handleGenerateSalaries = async () => {\n    try {\n      console.log(`Generating salaries for contractId: ${contractId}, month: ${month}, year: ${year}`);\n      const response = await axios.post(`http://localhost:5000/api/contracts/${contractId}/salaries/generate`, {\n        month,\n        year\n      });\n      console.log('Salaries generated:', response.data);\n      alert('Salaries generated successfully!');\n    } catch (error) {\n      console.error('Error generating salaries:', error);\n      alert('Error generating salaries. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Monthly Salary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: month,\n          onChange: handleMonthChange,\n          children: Array.from({\n            length: 12\n          }, (_, i) => i + 1).map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: m,\n            children: m\n          }, m, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: year,\n          onChange: handleYearChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSalaries,\n      children: \"Generate Salaries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateSalary, \"FY1pSw4KGbXoKrk5Tz+nQMsksvg=\");\n_c = GenerateSalary;\nexport default GenerateSalary;\nvar _c;\n$RefreshReg$(_c, \"GenerateSalary\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenerateSalary","contractId","_s","month","setMonth","Date","getMonth","year","setYear","getFullYear","handleMonthChange","e","target","value","handleYearChange","handleGenerateSalaries","console","log","response","post","data","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","Array","from","length","_","i","map","m","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kshre/OneDrive/Desktop/my-manpower-dashboard/frontend/src/components/GenerateSalary.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GenerateSalary = ({ contractId }) => {\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n\r\n  const handleMonthChange = (e) => {\r\n    setMonth(e.target.value);\r\n  };\r\n\r\n  const handleYearChange = (e) => {\r\n    setYear(e.target.value);\r\n  };\r\n\r\n  const handleGenerateSalaries = async () => {\r\n    try {\r\n      console.log(`Generating salaries for contractId: ${contractId}, month: ${month}, year: ${year}`);\r\n      const response = await axios.post(`http://localhost:5000/api/contracts/${contractId}/salaries/generate`, { month, year });\r\n      console.log('Salaries generated:', response.data);\r\n      alert('Salaries generated successfully!');\r\n    } catch (error) {\r\n      console.error('Error generating salaries:', error);\r\n      alert('Error generating salaries. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Generate Monthly Salary</h2>\r\n      <div className=\"date-selector\">\r\n        <label>\r\n          Month:\r\n          <select value={month} onChange={handleMonthChange}>\r\n            {Array.from({ length: 12 }, (_, i) => i + 1).map(m => (\r\n              <option key={m} value={m}>{m}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Year:\r\n          <input type=\"number\" value={year} onChange={handleYearChange} />\r\n        </label>\r\n      </div>\r\n      <button onClick={handleGenerateSalaries}>Generate Salaries</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateSalary;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}